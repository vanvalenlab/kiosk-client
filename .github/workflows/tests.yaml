# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: build

on: [push, pull_request]

jobs:
  tests:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip
      uses: actions/cache@v2
      with:
        # This path is specific to Ubuntu
        path: ~/.cache/pip
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt

    - name: PyTest
      run: |
        pytest kiosk_client --cov kiosk_client --pep8

    - name: Coveralls
      if: env.COVERALLS_REPO_TOKEN != null
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        COVERALLS_FLAG_NAME: python-${{ matrix.os }}-${{ matrix.python-version }}
        COVERALLS_PARALLEL: true
      run: |
        coveralls

  coveralls:
    name: Finish Coveralls
    needs: tests
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@master
      if: env.COVERALLS_REPO_TOKEN != null
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        parallel-finished: true

  test-docker:
    name: Build Docker and Run Tests

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build and Run Unit Tests
      env:
        IMAGE: ${{ github.repository }}:${{ github.sha }}
        NAME: kiosk_client
      run: |
        docker buildx build --load --tag ${{ env.IMAGE }} .
        docker run -d -it \
          --entrypoint=/bin/sh \
          --name $NAME \
          ${{ env.IMAGE }}
        docker cp requirements-test.txt $NAME:/usr/src/app/requirements-test.txt
        docker exec $NAME pip install -r requirements-test.txt
        docker exec $NAME pytest
        docker kill $NAME && docker rm $NAME
